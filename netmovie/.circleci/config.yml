version: 2.1
executors:
    app-executor:
        docker:
            - image: circleci/node:12.18.1
        working_directory: ~/project

aliases:
    - &show-current-branch-name
        run:
            name: Show current branch
            command: echo ${CURRENT_BRANCH}
    - &restore-cache
        restore_cache:
            keys:
                - app-{{ checksum "package.json" }}
                - app-
    - &install-npm
        run:
            name: Install npm
            command: npm install
    - &save-cache
        save_cache:
            key: app-{{ checksum "package.json" }}
            paths:
                - node_modules
    - &install-aws-cli
        run:
            name: Installing AWS CLI
            working_directory: /
            command: |
                sudo apt-get -y -qq update
                sudo apt-get install -y awscli
                sudo apt-get install -y python-pip python-dev build-essential
    - &build-project
        run:
            name: Build Project
            command: | 
                npm install
                npm run build
                cd build
                zip ../build.zip -r * .[^.]*
                echo "Build successful!"

jobs:
    build:
        executors: app-executor
        steps:
            - checkout
            - *show-current-branch-name
            - *restore-cache
            - *install-npm
            - *save-cache

    deploy-to-aws-s3:
        executors: app-executor
        steps:
            - checkout
            - *show-current-branch-name
            - *install-aws-cli
            - *build-project
            - run:
                name: Deploy to AWS S3
                command: |
                    if [ "${CURRENT_BRANCH}" == "master" ]
                    then
                        aws --region ${AWS_REGION} s3 sync ~/project/build s3://${AWS_BUCKET_PRODUCTION} --delete
                    elif [ "${CURRENT_BRANCH}" == "staging" ]
                    then
                        aws --region ${AWS_REGION} s3 sync ~/project/build s3://${AWS_BUCKET_STAGING} --delete
                    else
                        aws --region ${AWS_REGION} s3 sync ~/project/build s3://${AWS_BUCKET_DEV} --delete
                    fi

    deploy-to-aws-cloudfront:
        executors: app-executor
        steps:
            - checkout
            - *show-current-branch-name
            - *install-aws-cli
            - *build-project
            - run:
                name: Deploy to AWS Cloudfront
                command: |
                    aws configure set preview.cloudfront
                    if [ "${CURRENT_BRANCH" == "master" ]
                    then
                        aws cloudfront create-invalidation --distribution-id ${PRODUCTION_DISTRIBUTION_ID} --paths /\*
                    elif ["${CURRENT_BRANCH" == "staging" ]
                        aws cloudfront create-invalidation --distribution-id ${STAGING_DISTRIBUTION_ID} --paths /\*
                    else
                        aws cloudfront create-invalidation --distribution-id ${DEV_DISTRIBUTION_ID} --paths /\*
                    fi

workflows:
    build_and_deploy:
        jobs:
            - build
            - deploy-to-aws-s3:
                requires:
                    - build
                filters:
                    branches:
                        only:
                            - develop
                            - staging
                            - master
            - deploy-to-aws-cloudfront:
                requires:
                    - deploy-to-aws-s3
                filters:
                    branches:
                        only:
                            - develop
                            - staging
                            - master